//! Generated by Snowball 2.0.0 - https://snowballstem.org/

package nepali

import (
	snowballRuntime "github.com/blevesearch/snowballstem"
)

var A_0 = []*snowballRuntime.Among{
	{Str: "\u0915\u0940", A: -1, B: 2, F: nil},
	{Str: "\u0932\u093E\u0907", A: -1, B: 1, F: nil},
	{Str: "\u0932\u0947", A: -1, B: 1, F: nil},
	{Str: "\u0932\u093E\u0908", A: -1, B: 1, F: nil},
	{Str: "\u0915\u0948", A: -1, B: 2, F: nil},
	{Str: "\u0938\u0901\u0917\u0948", A: -1, B: 1, F: nil},
	{Str: "\u092E\u0948", A: -1, B: 1, F: nil},
	{Str: "\u0915\u094B", A: -1, B: 2, F: nil},
	{Str: "\u0938\u0901\u0917", A: -1, B: 1, F: nil},
	{Str: "\u0938\u0902\u0917", A: -1, B: 1, F: nil},
	{Str: "\u092E\u093E\u0930\u094D\u092B\u0924", A: -1, B: 1, F: nil},
	{Str: "\u0930\u0924", A: -1, B: 1, F: nil},
	{Str: "\u0915\u093E", A: -1, B: 2, F: nil},
	{Str: "\u092E\u093E", A: -1, B: 1, F: nil},
	{Str: "\u0926\u094D\u0935\u093E\u0930\u093E", A: -1, B: 1, F: nil},
	{Str: "\u0915\u093F", A: -1, B: 2, F: nil},
	{Str: "\u092A\u091B\u093F", A: -1, B: 1, F: nil},
}

var A_1 = []*snowballRuntime.Among{
	{Str: "\u0901", A: -1, B: -1, F: nil},
	{Str: "\u0902", A: -1, B: -1, F: nil},
	{Str: "\u0948", A: -1, B: -1, F: nil},
}

var A_2 = []*snowballRuntime.Among{
	{Str: "\u0901", A: -1, B: 1, F: nil},
	{Str: "\u0902", A: -1, B: 1, F: nil},
	{Str: "\u0948", A: -1, B: 2, F: nil},
}

var A_3 = []*snowballRuntime.Among{
	{Str: "\u0947\u0915\u0940", A: -1, B: 1, F: nil},
	{Str: "\u090F\u0915\u0940", A: -1, B: 1, F: nil},
	{Str: "\u0907\u090F\u0915\u0940", A: 1, B: 1, F: nil},
	{Str: "\u093F\u090F\u0915\u0940", A: 1, B: 1, F: nil},
	{Str: "\u0926\u0947\u0916\u0940", A: -1, B: 1, F: nil},
	{Str: "\u0925\u0940", A: -1, B: 1, F: nil},
	{Str: "\u0926\u0940", A: -1, B: 1, F: nil},
	{Str: "\u091B\u0941", A: -1, B: 1, F: nil},
	{Str: "\u0947\u091B\u0941", A: 7, B: 1, F: nil},
	{Str: "\u0928\u0947\u091B\u0941", A: 8, B: 1, F: nil},
	{Str: "\u090F\u091B\u0941", A: 7, B: 1, F: nil},
	{Str: "\u0928\u0941", A: -1, B: 1, F: nil},
	{Str: "\u0939\u0930\u0941", A: -1, B: 1, F: nil},
	{Str: "\u0939\u0930\u0942", A: -1, B: 1, F: nil},
	{Str: "\u091B\u0947", A: -1, B: 1, F: nil},
	{Str: "\u0925\u0947", A: -1, B: 1, F: nil},
	{Str: "\u0928\u0947", A: -1, B: 1, F: nil},
	{Str: "\u0947\u0915\u0948", A: -1, B: 1, F: nil},
	{Str: "\u0928\u0947\u0915\u0948", A: 17, B: 1, F: nil},
	{Str: "\u090F\u0915\u0948", A: -1, B: 1, F: nil},
	{Str: "\u0926\u0948", A: -1, B: 1, F: nil},
	{Str: "\u0907\u0926\u0948", A: 20, B: 1, F: nil},
	{Str: "\u093F\u0926\u0948", A: 20, B: 1, F: nil},
	{Str: "\u0947\u0915\u094B", A: -1, B: 1, F: nil},
	{Str: "\u0928\u0947\u0915\u094B", A: 23, B: 1, F: nil},
	{Str: "\u090F\u0915\u094B", A: -1, B: 1, F: nil},
	{Str: "\u0907\u090F\u0915\u094B", A: 25, B: 1, F: nil},
	{Str: "\u093F\u090F\u0915\u094B", A: 25, B: 1, F: nil},
	{Str: "\u0926\u094B", A: -1, B: 1, F: nil},
	{Str: "\u0907\u0926\u094B", A: 28, B: 1, F: nil},
	{Str: "\u093F\u0926\u094B", A: 28, B: 1, F: nil},
	{Str: "\u092F\u094B", A: -1, B: 1, F: nil},
	{Str: "\u0907\u092F\u094B", A: 31, B: 1, F: nil},
	{Str: "\u0925\u094D\u092F\u094B", A: 31, B: 1, F: nil},
	{Str: "\u092D\u092F\u094B", A: 31, B: 1, F: nil},
	{Str: "\u093F\u092F\u094B", A: 31, B: 1, F: nil},
	{Str: "\u0925\u093F\u092F\u094B", A: 35, B: 1, F: nil},
	{Str: "\u0926\u093F\u092F\u094B", A: 35, B: 1, F: nil},
	{Str: "\u091B\u094C", A: -1, B: 1, F: nil},
	{Str: "\u0907\u091B\u094C", A: 38, B: 1, F: nil},
	{Str: "\u0947\u091B\u094C", A: 38, B: 1, F: nil},
	{Str: "\u0928\u0947\u091B\u094C", A: 40, B: 1, F: nil},
	{Str: "\u090F\u091B\u094C", A: 38, B: 1, F: nil},
	{Str: "\u093F\u091B\u094C", A: 38, B: 1, F: nil},
	{Str: "\u092F\u094C", A: -1, B: 1, F: nil},
	{Str: "\u091B\u094D\u092F\u094C", A: 44, B: 1, F: nil},
	{Str: "\u0925\u094D\u092F\u094C", A: 44, B: 1, F: nil},
	{Str: "\u0925\u093F\u092F\u094C", A: 44, B: 1, F: nil},
	{Str: "\u091B\u0928\u094D", A: -1, B: 1, F: nil},
	{Str: "\u0907\u091B\u0928\u094D", A: 48, B: 1, F: nil},
	{Str: "\u0947\u091B\u0928\u094D", A: 48, B: 1, F: nil},
	{Str: "\u0928\u0947\u091B\u0928\u094D", A: 50, B: 1, F: nil},
	{Str: "\u090F\u091B\u0928\u094D", A: 48, B: 1, F: nil},
	{Str: "\u093F\u091B\u0928\u094D", A: 48, B: 1, F: nil},
	{Str: "\u0932\u093E\u0928\u094D", A: -1, B: 1, F: nil},
	{Str: "\u091B\u093F\u0928\u094D", A: -1, B: 1, F: nil},
	{Str: "\u0925\u093F\u0928\u094D", A: -1, B: 1, F: nil},
	{Str: "\u092A\u0930\u094D", A: -1, B: 1, F: nil},
	{Str: "\u0907\u0938\u094D", A: -1, B: 1, F: nil},
	{Str: "\u0925\u093F\u0907\u0938\u094D", A: 58, B: 1, F: nil},
	{Str: "\u091B\u0947\u0938\u094D", A: -1, B: 1, F: nil},
	{Str: "\u0939\u094B\u0938\u094D", A: -1, B: 1, F: nil},
	{Str: "\u091B\u0938\u094D", A: -1, B: 1, F: nil},
	{Str: "\u0907\u091B\u0938\u094D", A: 62, B: 1, F: nil},
	{Str: "\u0947\u091B\u0938\u094D", A: 62, B: 1, F: nil},
	{Str: "\u0928\u0947\u091B\u0938\u094D", A: 64, B: 1, F: nil},
	{Str: "\u090F\u091B\u0938\u094D", A: 62, B: 1, F: nil},
	{Str: "\u093F\u091B\u0938\u094D", A: 62, B: 1, F: nil},
	{Str: "\u093F\u0938\u094D", A: -1, B: 1, F: nil},
	{Str: "\u0925\u093F\u0938\u094D", A: 68, B: 1, F: nil},
	{Str: "\u0925\u093F\u090F", A: -1, B: 1, F: nil},
	{Str: "\u091B", A: -1, B: 1, F: nil},
	{Str: "\u0907\u091B", A: 71, B: 1, F: nil},
	{Str: "\u0947\u091B", A: 71, B: 1, F: nil},
	{Str: "\u0928\u0947\u091B", A: 73, B: 1, F: nil},
	{Str: "\u0939\u0941\u0928\u0947\u091B", A: 74, B: 1, F: nil},
	{Str: "\u0939\u0941\u0928\u094D\u091B", A: 71, B: 1, F: nil},
	{Str: "\u0907\u0928\u094D\u091B", A: 71, B: 1, F: nil},
	{Str: "\u093F\u0928\u094D\u091B", A: 71, B: 1, F: nil},
	{Str: "\u090F\u091B", A: 71, B: 1, F: nil},
	{Str: "\u093F\u091B", A: 71, B: 1, F: nil},
	{Str: "\u0947\u0915\u093E", A: -1, B: 1, F: nil},
	{Str: "\u0928\u0947\u0915\u093E", A: 81, B: 1, F: nil},
	{Str: "\u090F\u0915\u093E", A: -1, B: 1, F: nil},
	{Str: "\u0907\u090F\u0915\u093E", A: 83, B: 1, F: nil},
	{Str: "\u093F\u090F\u0915\u093E", A: 83, B: 1, F: nil},
	{Str: "\u0926\u093E", A: -1, B: 1, F: nil},
	{Str: "\u0907\u0926\u093E", A: 86, B: 1, F: nil},
	{Str: "\u093F\u0926\u093E", A: 86, B: 1, F: nil},
	{Str: "\u0926\u0947\u0916\u093F", A: -1, B: 1, F: nil},
	{Str: "\u092E\u093E\u0925\u093F", A: -1, B: 1, F: nil},
}

type Context struct {
}

func r_remove_category_1(env *snowballRuntime.Env, ctx interface{}) bool {
	context := ctx.(*Context)
	_ = context
	var among_var int32
	env.Ket = env.Cursor
	among_var = env.FindAmongB(A_0, context)
	if among_var == 0 {
		return false
	}
	env.Bra = env.Cursor
	if among_var == 1 {
		if !env.SliceDel() {
			return false
		}
	} else if among_var == 2 {
	lab0:
		for {
			var v_1 = env.Limit - env.Cursor
		lab1:
			for {
			lab2:
				for {
					var v_2 = env.Limit - env.Cursor
				lab3:
					for {
						if !env.EqSB("\u090F") {
							break lab3
						}
						break lab2
					}
					env.Cursor = env.Limit - v_2
					if !env.EqSB("\u0947") {
						break lab1
					}
					break lab2
				}
				break lab0
			}
			env.Cursor = env.Limit - v_1
			if !env.SliceDel() {
				return false
			}
			break lab0
		}
	}
	return true
}

func r_check_category_2(env *snowballRuntime.Env, ctx interface{}) bool {
	context := ctx.(*Context)
	_ = context
	env.Ket = env.Cursor
	if env.FindAmongB(A_1, context) == 0 {
		return false
	}
	env.Bra = env.Cursor
	return true
}

func r_remove_category_2(env *snowballRuntime.Env, ctx interface{}) bool {
	context := ctx.(*Context)
	_ = context
	var among_var int32
	env.Ket = env.Cursor
	among_var = env.FindAmongB(A_2, context)
	if among_var == 0 {
		return false
	}
	env.Bra = env.Cursor
	if among_var == 1 {
	lab0:
		for {
			var v_1 = env.Limit - env.Cursor
		lab1:
			for {
				if !env.EqSB("\u092F\u094C") {
					break lab1
				}
				break lab0
			}
			env.Cursor = env.Limit - v_1
		lab2:
			for {
				if !env.EqSB("\u091B\u094C") {
					break lab2
				}
				break lab0
			}
			env.Cursor = env.Limit - v_1
		lab3:
			for {
				if !env.EqSB("\u0928\u094C") {
					break lab3
				}
				break lab0
			}
			env.Cursor = env.Limit - v_1
			if !env.EqSB("\u0925\u0947") {
				return false
			}
			break lab0
		}
		if !env.SliceDel() {
			return false
		}
	} else if among_var == 2 {
		if !env.EqSB("\u0924\u094D\u0930") {
			return false
		}
		if !env.SliceDel() {
			return false
		}
	}
	return true
}

func r_remove_category_3(env *snowballRuntime.Env, ctx interface{}) bool {
	context := ctx.(*Context)
	_ = context
	env.Ket = env.Cursor
	if env.FindAmongB(A_3, context) == 0 {
		return false
	}
	env.Bra = env.Cursor
	if !env.SliceDel() {
		return false
	}
	return true
}

func Stem(env *snowballRuntime.Env) bool {
	var context = &Context{}
	_ = context
	env.LimitBackward = env.Cursor
	env.Cursor = env.Limit
	var v_1 = env.Limit - env.Cursor
	r_remove_category_1(env, context)
	env.Cursor = env.Limit - v_1
	var v_2 = env.Limit - env.Cursor
lab0:
	for {
	replab1:
		for {
			var v_3 = env.Limit - env.Cursor
		lab2:
			for range [2]struct{}{} {
				var v_4 = env.Limit - env.Cursor
			lab3:
				for {
					var v_5 = env.Limit - env.Cursor
					if !r_check_category_2(env, context) {
						break lab3
					}
					env.Cursor = env.Limit - v_5
					if !r_remove_category_2(env, context) {
						break lab3
					}
					break lab3
				}
				env.Cursor = env.Limit - v_4
				if !r_remove_category_3(env, context) {
					break lab2
				}
				continue replab1
			}
			env.Cursor = env.Limit - v_3
			break replab1
		}
		break lab0
	}
	env.Cursor = env.Limit - v_2
	env.Cursor = env.LimitBackward
	return true
}
