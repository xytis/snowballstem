//! Generated by Snowball 2.0.0 - https://snowballstem.org/

package lithuanian

import (
	snowballRuntime "github.com/blevesearch/snowballstem"
)

var A_0 = []*snowballRuntime.Among{
	{Str: "a", A: -1, B: -1, F: nil},
	{Str: "ia", A: 0, B: -1, F: nil},
	{Str: "eria", A: 1, B: -1, F: nil},
	{Str: "osna", A: 0, B: -1, F: nil},
	{Str: "iosna", A: 3, B: -1, F: nil},
	{Str: "uosna", A: 3, B: -1, F: nil},
	{Str: "iuosna", A: 5, B: -1, F: nil},
	{Str: "ysna", A: 0, B: -1, F: nil},
	{Str: "\u0117sna", A: 0, B: -1, F: nil},
	{Str: "e", A: -1, B: -1, F: nil},
	{Str: "ie", A: 9, B: -1, F: nil},
	{Str: "enie", A: 10, B: -1, F: nil},
	{Str: "erie", A: 10, B: -1, F: nil},
	{Str: "oje", A: 9, B: -1, F: nil},
	{Str: "ioje", A: 13, B: -1, F: nil},
	{Str: "uje", A: 9, B: -1, F: nil},
	{Str: "iuje", A: 15, B: -1, F: nil},
	{Str: "yje", A: 9, B: -1, F: nil},
	{Str: "enyje", A: 17, B: -1, F: nil},
	{Str: "eryje", A: 17, B: -1, F: nil},
	{Str: "\u0117je", A: 9, B: -1, F: nil},
	{Str: "ame", A: 9, B: -1, F: nil},
	{Str: "iame", A: 21, B: -1, F: nil},
	{Str: "sime", A: 9, B: -1, F: nil},
	{Str: "ome", A: 9, B: -1, F: nil},
	{Str: "\u0117me", A: 9, B: -1, F: nil},
	{Str: "tum\u0117me", A: 25, B: -1, F: nil},
	{Str: "ose", A: 9, B: -1, F: nil},
	{Str: "iose", A: 27, B: -1, F: nil},
	{Str: "uose", A: 27, B: -1, F: nil},
	{Str: "iuose", A: 29, B: -1, F: nil},
	{Str: "yse", A: 9, B: -1, F: nil},
	{Str: "enyse", A: 31, B: -1, F: nil},
	{Str: "eryse", A: 31, B: -1, F: nil},
	{Str: "\u0117se", A: 9, B: -1, F: nil},
	{Str: "ate", A: 9, B: -1, F: nil},
	{Str: "iate", A: 35, B: -1, F: nil},
	{Str: "ite", A: 9, B: -1, F: nil},
	{Str: "kite", A: 37, B: -1, F: nil},
	{Str: "site", A: 37, B: -1, F: nil},
	{Str: "ote", A: 9, B: -1, F: nil},
	{Str: "tute", A: 9, B: -1, F: nil},
	{Str: "\u0117te", A: 9, B: -1, F: nil},
	{Str: "tum\u0117te", A: 42, B: -1, F: nil},
	{Str: "i", A: -1, B: -1, F: nil},
	{Str: "ai", A: 44, B: -1, F: nil},
	{Str: "iai", A: 45, B: -1, F: nil},
	{Str: "eriai", A: 46, B: -1, F: nil},
	{Str: "ei", A: 44, B: -1, F: nil},
	{Str: "tumei", A: 48, B: -1, F: nil},
	{Str: "ki", A: 44, B: -1, F: nil},
	{Str: "imi", A: 44, B: -1, F: nil},
	{Str: "erimi", A: 51, B: -1, F: nil},
	{Str: "umi", A: 44, B: -1, F: nil},
	{Str: "iumi", A: 53, B: -1, F: nil},
	{Str: "si", A: 44, B: -1, F: nil},
	{Str: "asi", A: 55, B: -1, F: nil},
	{Str: "iasi", A: 56, B: -1, F: nil},
	{Str: "esi", A: 55, B: -1, F: nil},
	{Str: "iesi", A: 58, B: -1, F: nil},
	{Str: "siesi", A: 59, B: -1, F: nil},
	{Str: "isi", A: 55, B: -1, F: nil},
	{Str: "aisi", A: 61, B: -1, F: nil},
	{Str: "eisi", A: 61, B: -1, F: nil},
	{Str: "tumeisi", A: 63, B: -1, F: nil},
	{Str: "uisi", A: 61, B: -1, F: nil},
	{Str: "osi", A: 55, B: -1, F: nil},
	{Str: "\u0117josi", A: 66, B: -1, F: nil},
	{Str: "uosi", A: 66, B: -1, F: nil},
	{Str: "iuosi", A: 68, B: -1, F: nil},
	{Str: "siuosi", A: 69, B: -1, F: nil},
	{Str: "usi", A: 55, B: -1, F: nil},
	{Str: "ausi", A: 71, B: -1, F: nil},
	{Str: "\u010Diausi", A: 72, B: -1, F: nil},
	{Str: "\u0105si", A: 55, B: -1, F: nil},
	{Str: "\u0117si", A: 55, B: -1, F: nil},
	{Str: "\u0173si", A: 55, B: -1, F: nil},
	{Str: "t\u0173si", A: 76, B: -1, F: nil},
	{Str: "ti", A: 44, B: -1, F: nil},
	{Str: "enti", A: 78, B: -1, F: nil},
	{Str: "inti", A: 78, B: -1, F: nil},
	{Str: "oti", A: 78, B: -1, F: nil},
	{Str: "ioti", A: 81, B: -1, F: nil},
	{Str: "uoti", A: 81, B: -1, F: nil},
	{Str: "iuoti", A: 83, B: -1, F: nil},
	{Str: "auti", A: 78, B: -1, F: nil},
	{Str: "iauti", A: 85, B: -1, F: nil},
	{Str: "yti", A: 78, B: -1, F: nil},
	{Str: "\u0117ti", A: 78, B: -1, F: nil},
	{Str: "tel\u0117ti", A: 88, B: -1, F: nil},
	{Str: "in\u0117ti", A: 88, B: -1, F: nil},
	{Str: "ter\u0117ti", A: 88, B: -1, F: nil},
	{Str: "ui", A: 44, B: -1, F: nil},
	{Str: "iui", A: 92, B: -1, F: nil},
	{Str: "eniui", A: 93, B: -1, F: nil},
	{Str: "oj", A: -1, B: -1, F: nil},
	{Str: "\u0117j", A: -1, B: -1, F: nil},
	{Str: "k", A: -1, B: -1, F: nil},
	{Str: "am", A: -1, B: -1, F: nil},
	{Str: "iam", A: 98, B: -1, F: nil},
	{Str: "iem", A: -1, B: -1, F: nil},
	{Str: "im", A: -1, B: -1, F: nil},
	{Str: "sim", A: 101, B: -1, F: nil},
	{Str: "om", A: -1, B: -1, F: nil},
	{Str: "tum", A: -1, B: -1, F: nil},
	{Str: "\u0117m", A: -1, B: -1, F: nil},
	{Str: "tum\u0117m", A: 105, B: -1, F: nil},
	{Str: "an", A: -1, B: -1, F: nil},
	{Str: "on", A: -1, B: -1, F: nil},
	{Str: "ion", A: 108, B: -1, F: nil},
	{Str: "un", A: -1, B: -1, F: nil},
	{Str: "iun", A: 110, B: -1, F: nil},
	{Str: "\u0117n", A: -1, B: -1, F: nil},
	{Str: "o", A: -1, B: -1, F: nil},
	{Str: "io", A: 113, B: -1, F: nil},
	{Str: "enio", A: 114, B: -1, F: nil},
	{Str: "\u0117jo", A: 113, B: -1, F: nil},
	{Str: "uo", A: 113, B: -1, F: nil},
	{Str: "s", A: -1, B: -1, F: nil},
	{Str: "as", A: 118, B: -1, F: nil},
	{Str: "ias", A: 119, B: -1, F: nil},
	{Str: "es", A: 118, B: -1, F: nil},
	{Str: "ies", A: 121, B: -1, F: nil},
	{Str: "is", A: 118, B: -1, F: nil},
	{Str: "ais", A: 123, B: -1, F: nil},
	{Str: "iais", A: 124, B: -1, F: nil},
	{Str: "tumeis", A: 123, B: -1, F: nil},
	{Str: "imis", A: 123, B: -1, F: nil},
	{Str: "enimis", A: 127, B: -1, F: nil},
	{Str: "omis", A: 123, B: -1, F: nil},
	{Str: "iomis", A: 129, B: -1, F: nil},
	{Str: "umis", A: 123, B: -1, F: nil},
	{Str: "\u0117mis", A: 123, B: -1, F: nil},
	{Str: "enis", A: 123, B: -1, F: nil},
	{Str: "asis", A: 123, B: -1, F: nil},
	{Str: "ysis", A: 123, B: -1, F: nil},
	{Str: "ams", A: 118, B: -1, F: nil},
	{Str: "iams", A: 136, B: -1, F: nil},
	{Str: "iems", A: 118, B: -1, F: nil},
	{Str: "ims", A: 118, B: -1, F: nil},
	{Str: "enims", A: 139, B: -1, F: nil},
	{Str: "erims", A: 139, B: -1, F: nil},
	{Str: "oms", A: 118, B: -1, F: nil},
	{Str: "ioms", A: 142, B: -1, F: nil},
	{Str: "ums", A: 118, B: -1, F: nil},
	{Str: "\u0117ms", A: 118, B: -1, F: nil},
	{Str: "ens", A: 118, B: -1, F: nil},
	{Str: "os", A: 118, B: -1, F: nil},
	{Str: "ios", A: 147, B: -1, F: nil},
	{Str: "uos", A: 147, B: -1, F: nil},
	{Str: "iuos", A: 149, B: -1, F: nil},
	{Str: "ers", A: 118, B: -1, F: nil},
	{Str: "us", A: 118, B: -1, F: nil},
	{Str: "aus", A: 152, B: -1, F: nil},
	{Str: "iaus", A: 153, B: -1, F: nil},
	{Str: "ius", A: 152, B: -1, F: nil},
	{Str: "ys", A: 118, B: -1, F: nil},
	{Str: "enys", A: 156, B: -1, F: nil},
	{Str: "erys", A: 156, B: -1, F: nil},
	{Str: "\u0105s", A: 118, B: -1, F: nil},
	{Str: "i\u0105s", A: 159, B: -1, F: nil},
	{Str: "\u0117s", A: 118, B: -1, F: nil},
	{Str: "am\u0117s", A: 161, B: -1, F: nil},
	{Str: "iam\u0117s", A: 162, B: -1, F: nil},
	{Str: "im\u0117s", A: 161, B: -1, F: nil},
	{Str: "kim\u0117s", A: 164, B: -1, F: nil},
	{Str: "sim\u0117s", A: 164, B: -1, F: nil},
	{Str: "om\u0117s", A: 161, B: -1, F: nil},
	{Str: "\u0117m\u0117s", A: 161, B: -1, F: nil},
	{Str: "tum\u0117m\u0117s", A: 168, B: -1, F: nil},
	{Str: "at\u0117s", A: 161, B: -1, F: nil},
	{Str: "iat\u0117s", A: 170, B: -1, F: nil},
	{Str: "sit\u0117s", A: 161, B: -1, F: nil},
	{Str: "ot\u0117s", A: 161, B: -1, F: nil},
	{Str: "\u0117t\u0117s", A: 161, B: -1, F: nil},
	{Str: "tum\u0117t\u0117s", A: 174, B: -1, F: nil},
	{Str: "\u016Bs", A: 118, B: -1, F: nil},
	{Str: "\u012Fs", A: 118, B: -1, F: nil},
	{Str: "t\u0173s", A: 118, B: -1, F: nil},
	{Str: "at", A: -1, B: -1, F: nil},
	{Str: "iat", A: 179, B: -1, F: nil},
	{Str: "it", A: -1, B: -1, F: nil},
	{Str: "sit", A: 181, B: -1, F: nil},
	{Str: "ot", A: -1, B: -1, F: nil},
	{Str: "\u0117t", A: -1, B: -1, F: nil},
	{Str: "tum\u0117t", A: 184, B: -1, F: nil},
	{Str: "u", A: -1, B: -1, F: nil},
	{Str: "au", A: 186, B: -1, F: nil},
	{Str: "iau", A: 187, B: -1, F: nil},
	{Str: "\u010Diau", A: 188, B: -1, F: nil},
	{Str: "iu", A: 186, B: -1, F: nil},
	{Str: "eniu", A: 190, B: -1, F: nil},
	{Str: "siu", A: 190, B: -1, F: nil},
	{Str: "y", A: -1, B: -1, F: nil},
	{Str: "\u0105", A: -1, B: -1, F: nil},
	{Str: "i\u0105", A: 194, B: -1, F: nil},
	{Str: "\u0117", A: -1, B: -1, F: nil},
	{Str: "\u0119", A: -1, B: -1, F: nil},
	{Str: "\u012F", A: -1, B: -1, F: nil},
	{Str: "en\u012F", A: 198, B: -1, F: nil},
	{Str: "er\u012F", A: 198, B: -1, F: nil},
	{Str: "\u0173", A: -1, B: -1, F: nil},
	{Str: "i\u0173", A: 201, B: -1, F: nil},
	{Str: "er\u0173", A: 201, B: -1, F: nil},
}

var A_1 = []*snowballRuntime.Among{
	{Str: "ing", A: -1, B: -1, F: nil},
	{Str: "aj", A: -1, B: -1, F: nil},
	{Str: "iaj", A: 1, B: -1, F: nil},
	{Str: "iej", A: -1, B: -1, F: nil},
	{Str: "oj", A: -1, B: -1, F: nil},
	{Str: "ioj", A: 4, B: -1, F: nil},
	{Str: "uoj", A: 4, B: -1, F: nil},
	{Str: "iuoj", A: 6, B: -1, F: nil},
	{Str: "auj", A: -1, B: -1, F: nil},
	{Str: "\u0105j", A: -1, B: -1, F: nil},
	{Str: "i\u0105j", A: 9, B: -1, F: nil},
	{Str: "\u0117j", A: -1, B: -1, F: nil},
	{Str: "\u0173j", A: -1, B: -1, F: nil},
	{Str: "i\u0173j", A: 12, B: -1, F: nil},
	{Str: "ok", A: -1, B: -1, F: nil},
	{Str: "iok", A: 14, B: -1, F: nil},
	{Str: "iuk", A: -1, B: -1, F: nil},
	{Str: "uliuk", A: 16, B: -1, F: nil},
	{Str: "u\u010Diuk", A: 16, B: -1, F: nil},
	{Str: "i\u0161k", A: -1, B: -1, F: nil},
	{Str: "iul", A: -1, B: -1, F: nil},
	{Str: "yl", A: -1, B: -1, F: nil},
	{Str: "\u0117l", A: -1, B: -1, F: nil},
	{Str: "am", A: -1, B: -1, F: nil},
	{Str: "dam", A: 23, B: -1, F: nil},
	{Str: "jam", A: 23, B: -1, F: nil},
	{Str: "zgan", A: -1, B: -1, F: nil},
	{Str: "ain", A: -1, B: -1, F: nil},
	{Str: "esn", A: -1, B: -1, F: nil},
	{Str: "op", A: -1, B: -1, F: nil},
	{Str: "iop", A: 29, B: -1, F: nil},
	{Str: "ias", A: -1, B: -1, F: nil},
	{Str: "ies", A: -1, B: -1, F: nil},
	{Str: "ais", A: -1, B: -1, F: nil},
	{Str: "iais", A: 33, B: -1, F: nil},
	{Str: "os", A: -1, B: -1, F: nil},
	{Str: "ios", A: 35, B: -1, F: nil},
	{Str: "uos", A: 35, B: -1, F: nil},
	{Str: "iuos", A: 37, B: -1, F: nil},
	{Str: "aus", A: -1, B: -1, F: nil},
	{Str: "iaus", A: 39, B: -1, F: nil},
	{Str: "\u0105s", A: -1, B: -1, F: nil},
	{Str: "i\u0105s", A: 41, B: -1, F: nil},
	{Str: "\u0119s", A: -1, B: -1, F: nil},
	{Str: "ut\u0117ait", A: -1, B: -1, F: nil},
	{Str: "ant", A: -1, B: -1, F: nil},
	{Str: "iant", A: 45, B: -1, F: nil},
	{Str: "siant", A: 46, B: -1, F: nil},
	{Str: "int", A: -1, B: -1, F: nil},
	{Str: "ot", A: -1, B: -1, F: nil},
	{Str: "uot", A: 49, B: -1, F: nil},
	{Str: "iuot", A: 50, B: -1, F: nil},
	{Str: "yt", A: -1, B: -1, F: nil},
	{Str: "\u0117t", A: -1, B: -1, F: nil},
	{Str: "yk\u0161t", A: -1, B: -1, F: nil},
	{Str: "iau", A: -1, B: -1, F: nil},
	{Str: "dav", A: -1, B: -1, F: nil},
	{Str: "sv", A: -1, B: -1, F: nil},
	{Str: "\u0161v", A: -1, B: -1, F: nil},
	{Str: "yk\u0161\u010D", A: -1, B: -1, F: nil},
	{Str: "\u0119", A: -1, B: -1, F: nil},
	{Str: "\u0117j\u0119", A: 60, B: -1, F: nil},
}

var A_2 = []*snowballRuntime.Among{
	{Str: "ojime", A: -1, B: 7, F: nil},
	{Str: "\u0117jime", A: -1, B: 3, F: nil},
	{Str: "avime", A: -1, B: 6, F: nil},
	{Str: "okate", A: -1, B: 8, F: nil},
	{Str: "aite", A: -1, B: 1, F: nil},
	{Str: "uote", A: -1, B: 2, F: nil},
	{Str: "asius", A: -1, B: 5, F: nil},
	{Str: "okat\u0117s", A: -1, B: 8, F: nil},
	{Str: "ait\u0117s", A: -1, B: 1, F: nil},
	{Str: "uot\u0117s", A: -1, B: 2, F: nil},
	{Str: "esiu", A: -1, B: 4, F: nil},
}

var A_3 = []*snowballRuntime.Among{
	{Str: "\u010D", A: -1, B: 1, F: nil},
	{Str: "d\u017E", A: -1, B: 2, F: nil},
}

var A_4 = []*snowballRuntime.Among{
	{Str: "gd", A: -1, B: 1, F: nil},
}

var G_v = []byte{17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 64, 1, 0, 64, 0, 0, 0, 0, 0, 0, 0, 4, 4}

type Context struct {
	i_p1 int
}

func r_R1(env *snowballRuntime.Env, ctx interface{}) bool {
	context := ctx.(*Context)
	_ = context
	if !(context.i_p1 <= env.Cursor) {
		return false
	}
	return true
}

func r_step1(env *snowballRuntime.Env, ctx interface{}) bool {
	context := ctx.(*Context)
	_ = context
	if env.Cursor < context.i_p1 {
		return false
	}
	var v_2 = env.LimitBackward
	env.LimitBackward = context.i_p1
	env.Ket = env.Cursor
	if env.FindAmongB(A_0, context) == 0 {
		env.LimitBackward = v_2
		return false
	}
	env.Bra = env.Cursor
	env.LimitBackward = v_2
	if !r_R1(env, context) {
		return false
	}
	if !env.SliceDel() {
		return false
	}
	return true
}

func r_step2(env *snowballRuntime.Env, ctx interface{}) bool {
	context := ctx.(*Context)
	_ = context
replab0:
	for {
		var v_1 = env.Limit - env.Cursor
	lab1:
		for range [2]struct{}{} {
			if env.Cursor < context.i_p1 {
				break lab1
			}
			var v_3 = env.LimitBackward
			env.LimitBackward = context.i_p1
			env.Ket = env.Cursor
			if env.FindAmongB(A_1, context) == 0 {
				env.LimitBackward = v_3
				break lab1
			}
			env.Bra = env.Cursor
			env.LimitBackward = v_3
			if !env.SliceDel() {
				return false
			}
			continue replab0
		}
		env.Cursor = env.Limit - v_1
		break replab0
	}
	return true
}

func r_fix_conflicts(env *snowballRuntime.Env, ctx interface{}) bool {
	context := ctx.(*Context)
	_ = context
	var among_var int32
	env.Ket = env.Cursor
	among_var = env.FindAmongB(A_2, context)
	if among_var == 0 {
		return false
	}
	env.Bra = env.Cursor
	if among_var == 1 {
		if !env.SliceFrom("ait\u0117") {
			return false
		}
	} else if among_var == 2 {
		if !env.SliceFrom("uot\u0117") {
			return false
		}
	} else if among_var == 3 {
		if !env.SliceFrom("\u0117jimas") {
			return false
		}
	} else if among_var == 4 {
		if !env.SliceFrom("esys") {
			return false
		}
	} else if among_var == 5 {
		if !env.SliceFrom("asys") {
			return false
		}
	} else if among_var == 6 {
		if !env.SliceFrom("avimas") {
			return false
		}
	} else if among_var == 7 {
		if !env.SliceFrom("ojimas") {
			return false
		}
	} else if among_var == 8 {
		if !env.SliceFrom("okat\u0117") {
			return false
		}
	}
	return true
}

func r_fix_chdz(env *snowballRuntime.Env, ctx interface{}) bool {
	context := ctx.(*Context)
	_ = context
	var among_var int32
	env.Ket = env.Cursor
	among_var = env.FindAmongB(A_3, context)
	if among_var == 0 {
		return false
	}
	env.Bra = env.Cursor
	if among_var == 1 {
		if !env.SliceFrom("t") {
			return false
		}
	} else if among_var == 2 {
		if !env.SliceFrom("d") {
			return false
		}
	}
	return true
}

func r_fix_gd(env *snowballRuntime.Env, ctx interface{}) bool {
	context := ctx.(*Context)
	_ = context
	env.Ket = env.Cursor
	if env.FindAmongB(A_4, context) == 0 {
		return false
	}
	env.Bra = env.Cursor
	if !env.SliceFrom("g") {
		return false
	}
	return true
}

func Stem(env *snowballRuntime.Env) bool {
	var context = &Context{
		i_p1: 0,
	}
	_ = context
	context.i_p1 = env.Limit
	var v_1 = env.Cursor
lab0:
	for {
		var v_2 = env.Cursor
	lab1:
		for {
			var v_3 = env.Cursor
			if !env.EqS("a") {
				env.Cursor = v_2
				break lab1
			}
			env.Cursor = v_3
			if !(snowballRuntime.RuneCountInString(env.Current()) > 6) {
				env.Cursor = v_2
				break lab1
			}
			{
				var c = env.ByteIndexForHop((1))
				if int32(0) > c || c > int32(env.Limit) {
					env.Cursor = v_2
					break lab1
				}
				env.Cursor = int(c)
			}
			break lab1
		}
	golab2:
		for {
		lab3:
			for {
				if !env.InGrouping(G_v, 97, 371) {
					break lab3
				}
				break golab2
			}
			if env.Cursor >= env.Limit {
				break lab0
			}
			env.NextChar()
		}
	golab4:
		for {
		lab5:
			for {
				if !env.OutGrouping(G_v, 97, 371) {
					break lab5
				}
				break golab4
			}
			if env.Cursor >= env.Limit {
				break lab0
			}
			env.NextChar()
		}
		context.i_p1 = env.Cursor
		break lab0
	}
	env.Cursor = v_1
	env.LimitBackward = env.Cursor
	env.Cursor = env.Limit
	var v_6 = env.Limit - env.Cursor
	r_fix_conflicts(env, context)
	env.Cursor = env.Limit - v_6
	var v_7 = env.Limit - env.Cursor
	r_step1(env, context)
	env.Cursor = env.Limit - v_7
	var v_8 = env.Limit - env.Cursor
	r_fix_chdz(env, context)
	env.Cursor = env.Limit - v_8
	var v_9 = env.Limit - env.Cursor
	r_step2(env, context)
	env.Cursor = env.Limit - v_9
	var v_10 = env.Limit - env.Cursor
	r_fix_chdz(env, context)
	env.Cursor = env.Limit - v_10
	var v_11 = env.Limit - env.Cursor
	r_fix_gd(env, context)
	env.Cursor = env.Limit - v_11
	env.Cursor = env.LimitBackward
	return true
}
